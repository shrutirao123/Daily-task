students = {}  # Dictionary to store student data with Student ID as key

def add_student():
    stud_id = input("Enter Student ID: ")
    if stud_id in students.keys():
        print("Student ID already exists!\n")
        return
    name = input("Enter Student Name: ")
    grade = input("Enter Grade: ")
    subjects = input("Enter Subjects (comma-separated): ").split(',')
    marks = {subject.strip(): float(input(f"Enter marks for {subject.strip()}: ")) for subject in subjects}
    students.update({stud_id: {"Name": name, "Grade": grade, "Marks": marks}})
    print("Student added successfully!\n")

def update_student():
    stud_id = input("Enter Student ID to update: ")
    if students.get(stud_id):
        print("Current Data:", students.get(stud_id))
        students[stud_id].update({
            "Name": input("Enter new Name (or press Enter to keep current): ") or students[stud_id]["Name"],
            "Grade": input("Enter new Grade (or press Enter to keep current): ") or students[stud_id]["Grade"],
        })
        if input("Update Marks? (yes/no): ").lower() == 'yes':
            for subject in students[stud_id]["Marks"].keys():
                new_mark = input(f"Enter new marks for {subject} (or press Enter to keep current): ")
                students[stud_id]["Marks"][subject] = float(new_mark) if new_mark else students[stud_id]["Marks"][subject]
        print("Student details updated successfully!\n")
    else:
        print("Student not found!\n")

def remove_student():
    stud_id = input("Enter Student ID to remove: ")
    if students.pop(stud_id, None):
        print("Student removed successfully!\n")
    else:
        print("Student not found!\n")

def remove_last_student():
    if students:
        stud = students.popitem()
        print(f"Removed Student: {stud}\n")
    else:
        print("No students to remove!\n")

def view_students():
    if not students:
        print("No students to display.\n")
    else:
        print("\nStudent Report Card:")
        for stud_id, details in students.items():
            print(f"ID: {stud_id}, {details}")
        print()

def view_student_ids():
    print("Student IDs:", list(students.keys()))

def view_student_details():
    print("Student Details:", list(students.values()))

def clear_all_students():
    students.clear()
    print("All students removed!\n")

def initialize_default_students():
    keys = ["201", "202", "203"]
    default_values = {"Name": "Unknown", "Grade": "None", "Marks": {}}
    global students
    students = dict.fromkeys(keys, default_values)
    print("Initialized default students!\n")

def main():
    options = {
        '1': add_student,
        '2': update_student,
        '3': remove_student,
        '4': remove_last_student,
        '5': view_students,
        '6': view_student_ids,
        '7': view_student_details,
        '8': clear_all_students,
        '9': initialize_default_students,
        '10': exit
    }
    while True:
        print("Student Report Card System")
        print("1. Add Student")
        print("2. Update Student")
        print("3. Remove Student")
        print("4. Remove Last Student")
        print("5. View Students")
        print("6. View Student IDs")
        print("7. View Student Details")
        print("8. Clear All Students")
        print("9. Initialize Default Students")
        print("10. Exit")
        choice = input("Enter your choice: ")
        action = options.get(choice)
        if action:
            action()
        else:
            print("Invalid choice! Please try again.\n")

if __name__ == "__main__":
    main()
